# Locate SDL2 library

SET(SDL2TTF_SEARCH_PATHS /usr/local /usr /opt)

FIND_PATH(SDL2TTF_INCLUDE_DIR SDL_ttf.h HINTS $ENV{SDL2TTFDIR} PATH_SUFFIXES include/SDL2 include PATHS ${SDL2TTF_SEARCH_PATHS})

FIND_LIBRARY(SDL2TTF_LIBRARY_TEMP NAMES SDL2_ttf HINTS $ENV{SDL2TTFDIR} PATH_SUFFIXES lib64 lib PATHS ${SDL2TTF_SEARCH_PATHS})

IF (NOT SDL2TTF_BUILDING_LIBRARY)
    FIND_LIBRARY(SDL2TTFMAIN_LIBRARY
            NAMES SDL2_ttf
            HINTS
            $ENV{SDL2TTFDIR}
            PATH_SUFFIXES lib64 lib
            PATHS ${SDL2TTF_SEARCH_PATHS}
            )
ENDIF (NOT SDL2TTF_BUILDING_LIBRARY)


FIND_PACKAGE(Threads)

IF (SDL2TTF_LIBRARY_TEMP)

    # For SDL2TTFmain
    IF (NOT SDL2TTF_BUILDING_LIBRARY)
        IF (SDL2TTFMAIN_LIBRARY)
            SET(SDL2TTF_LIBRARY_TEMP ${SDL2TTFMAIN_LIBRARY} ${SDL2TTF_LIBRARY_TEMP})
        ENDIF (SDL2TTFMAIN_LIBRARY)
    ENDIF (NOT SDL2TTF_BUILDING_LIBRARY)


    SET(SDL2TTF_LIBRARY_TEMP ${SDL2TTF_LIBRARY_TEMP} ${CMAKE_THREAD_LIBS_INIT})

    # Set the final string here so the GUI reflects the final state.
    SET(SDL2TTF_LIBRARY ${SDL2TTF_LIBRARY_TEMP} CACHE STRING "Where the SDL2TTF Library can be found")
    # Set the temp variable to INTERNAL so it is not seen in the CMake GUI
    SET(SDL2TTF_LIBRARY_TEMP "${SDL2TTF_LIBRARY_TEMP}" CACHE INTERNAL "")
ENDIF (SDL2TTF_LIBRARY_TEMP)

INCLUDE(FindPackageHandleStandardArgs)

FIND_PACKAGE_HANDLE_STANDARD_ARGS(SDL2TTF REQUIRED_VARS SDL2TTF_LIBRARY SDL2TTF_INCLUDE_DIR)